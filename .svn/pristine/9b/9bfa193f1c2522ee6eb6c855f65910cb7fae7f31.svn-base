package com.talenton.lsg.ui.feed;

import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.TextView;

import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.assist.FailReason;
import com.nostra13.universalimageloader.core.listener.SimpleImageLoadingListener;
import com.talenton.lsg.BaseCompatActivity;
import com.talenton.lsg.R;
import com.talenton.lsg.base.AppConfig;
import com.talenton.lsg.base.server.UserServer;
import com.talenton.lsg.base.util.BitmapUtil;
import com.talenton.lsg.server.bean.feed.Feeds;
import com.tencent.connect.share.QQShare;
import com.tencent.connect.share.QzoneShare;
import com.tencent.mm.sdk.modelmsg.SendMessageToWX;
import com.tencent.mm.sdk.modelmsg.WXMediaMessage;
import com.tencent.mm.sdk.modelmsg.WXWebpageObject;
import com.tencent.mm.sdk.openapi.IWXAPI;
import com.tencent.mm.sdk.openapi.WXAPIFactory;
import com.tencent.tauth.IUiListener;
import com.tencent.tauth.Tencent;
import com.tencent.tauth.UiError;

import org.json.JSONObject;

import java.util.ArrayList;
import java.util.List;

public class SocialActivity extends BaseCompatActivity implements View.OnClickListener {
	public static final String KEY_FEEDS_ID = "feeds_id";
	public static final String KEY_ARTICLE_CONTENT = "article_content";
	public static final String KEY_ARTICLE_IMAGE = "article_image";
	public static final String KEY_SHARED_IMAGE = "shared_image";
	public static final String KEY_SHARED_TITLE = "shared_title";
	public static final String KEY_SHARED_CONTENT = "shared_content";
	public static final String KEY_SHARED_URL = "shared_url";
	public static final String KEY_SHARED_FROM = "shared_from";
	public static final String KEY_SHARE_TYPE = "key_share_type";
	public static final String KEY_ACTION_ID = "key_action_id";
	private static final int THUMB_SIZE = 80;
	private String mSharedFrom;
	private String mFeedsId;
	private String mSharedUrl;
	private String mSharedTitle;
	private String mSharedContent;
	private String mSharedImage;
	private int mActionId;

	private GridView mList;
	private GridAdapter mListAdapter;
	private ArrayList<SocialItem> mSocialItem;

	private IWXAPI api;
	private Tencent mTencent;

	public static void startSocialActivity(Context context, Feeds feeds,int actionId) {
		Intent intent = new Intent(context, SocialActivity.class);
		intent.putExtra(KEY_FEEDS_ID, feeds.guid);
		intent.putExtra(KEY_ARTICLE_CONTENT, feeds.content);
		intent.putExtra(KEY_ACTION_ID, actionId);
		if((feeds.attachinfo==null)||(feeds.attachinfo.isEmpty())){
			intent.putExtra(KEY_ARTICLE_IMAGE, "");
		}else{
			intent.putExtra(KEY_ARTICLE_IMAGE, feeds.attachinfo.get(0).filepath);
		}
//		Log.d("20150813", "KEY_ARTICLE_IMAGE="+intent.getStringExtra(KEY_ARTICLE_IMAGE));
		intent.putExtra(KEY_SHARED_TITLE, feeds.content);
		intent.putExtra(KEY_SHARED_URL, AppConfig.HOME_URL+"?mod=dynamic&ac=h5&guid="+feeds.guid);
		context.startActivity(intent);
	}
	
	public static void startSocialActivity(Context context, String title, String content, String url,int actionId){
		if(TextUtils.isEmpty(url)) return;
		
		Intent intent = new Intent(context, SocialActivity.class);
		intent.putExtra(KEY_FEEDS_ID, "1");
		intent.putExtra(KEY_ARTICLE_CONTENT, content);
//		Log.d("20150813", "KEY_ARTICLE_IMAGE="+intent.getStringExtra(KEY_ARTICLE_IMAGE));
		intent.putExtra(KEY_SHARED_TITLE, title);
		intent.putExtra(KEY_ACTION_ID, actionId);
		if(!url.startsWith("http://")){
			url = AppConfig.DEV_REQUEST_BASEURL +"?" + url;
		}
		intent.putExtra(KEY_SHARED_URL, url);
		context.startActivity(intent);
	}


	public static void startSocialActivity(Context context, String title, String content,String imgUrl,String url){
		if(TextUtils.isEmpty(url)) return;

		Intent intent = new Intent(context, SocialActivity.class);
		intent.putExtra(KEY_FEEDS_ID, "1");
		intent.putExtra(KEY_ARTICLE_CONTENT, content);
//		Log.d("20150813", "KEY_ARTICLE_IMAGE="+intent.getStringExtra(KEY_ARTICLE_IMAGE));
		intent.putExtra(KEY_SHARED_TITLE, title);
		intent.putExtra(KEY_ACTION_ID, 0);
		intent.putExtra(KEY_ARTICLE_IMAGE,imgUrl);
		if(!url.startsWith("http://")){
			url = AppConfig.DEV_REQUEST_BASEURL +"?" + url;
		}
		intent.putExtra(KEY_SHARED_URL, url);
		context.startActivity(intent);
	}

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.dialog_social);
		Intent intent = getIntent();
		if (intent != null) {
			mFeedsId = intent.getStringExtra(KEY_FEEDS_ID);
			mSharedTitle = intent.getStringExtra(KEY_SHARED_TITLE);
			mSharedContent = intent.getStringExtra(KEY_ARTICLE_CONTENT);
			mSharedUrl = intent.getStringExtra(KEY_SHARED_URL);
			mSharedImage = intent.getStringExtra(KEY_ARTICLE_IMAGE);
			mActionId = intent.getIntExtra(KEY_ACTION_ID, -1);
			if((mSharedTitle==null)||(mSharedTitle.length()==0))
				mSharedTitle=getString(R.string.app_name);
			if((mSharedUrl==null)||(mSharedUrl.length()==0))
				mSharedUrl=AppConfig.HOME_URL;
			if((mSharedImage==null)||(mSharedImage.length()==0))
				mSharedImage=AppConfig.HOME_URL+getString(R.string.circle_logo_icon);
		}
//		Log.d("20150813", "mSharedImage="+mSharedImage);
		if (TextUtils.isEmpty(mFeedsId)) {
			finish();
			overridePendingTransition(0, 0);
		}
		api = WXAPIFactory.createWXAPI(SocialActivity.this, UserServer.WX_APP_ID, true);
		boolean br=api.registerApp(UserServer.WX_APP_ID);
//		Log.d("20150813", "WX_APP_ID="+UserService.WX_APP_ID+ " bf="+br+" api="+api.toString());
		// Tencent类是SDK的主要实现类，开发者可通过Tencent类访问腾讯开放的OpenAPI。
		// 其中APP_ID是分配给第三方应用的appid，类型为String。
		mTencent = Tencent.createInstance(UserServer.QQ_APP_ID, getApplicationContext());
		findViewById(R.id.cancel).setOnClickListener(this);
		findViewById(R.id.back).setOnClickListener(this);

		mList = (GridView) findViewById(R.id.grid);
		mList.setSelector(new ColorDrawable(Color.TRANSPARENT));
		mListAdapter = new GridAdapter(SocialActivity.this, R.layout.item_social);

		mSocialItem = new ArrayList<SocialItem>(4);
		mSocialItem.add(new SocialItem(R.mipmap.social_weixin, R.string.social_weixin));
		mSocialItem.add(new SocialItem(R.mipmap.social_friend, R.string.social_friend));
		mSocialItem.add(new SocialItem(R.mipmap.social_qq, R.string.social_qq));
		mSocialItem.add(new SocialItem(R.mipmap.social_qzone, R.string.social_qzone));
		mListAdapter.setData(mSocialItem);
		mList.setAdapter(mListAdapter);
		mList.setOnItemClickListener(new AdapterView.OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
				if (view != null && view.getTag() != null) {
					social(position);//social((Integer) view.getTag());
				}
			}

		});

	}

	@Override
	public void onBackPressed() {
		super.onBackPressed();
		overridePendingTransition(0, 0);
	}
	
	@Override
	public void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);

		finish();
		overridePendingTransition(0, 0);
	}
	
	private class GridAdapter extends ArrayAdapter<SocialItem> {
		private LayoutInflater mInflater;
		private int mResource;

		public GridAdapter(Context context, int textViewResourceId) {
			super(context, textViewResourceId);
			mInflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
			mResource = textViewResourceId;

		}

		public void setData(List<SocialItem> data) {
			setNotifyOnChange(false);
			if (data != null) {
				for (SocialItem item : data) {
					add(item);
				}
			}
			notifyDataSetChanged();
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			View view;
			if (convertView == null) {
				view = mInflater.inflate(mResource, parent, false);
			} else {
				view = convertView;
			}
			ImageView logo = (ImageView) view.findViewById(R.id.social_logo);
			TextView name = (TextView) view.findViewById(R.id.social_name);
			SocialItem item = getItem(position);
			logo.setImageResource(item.logo);
			name.setText(item.name);
			view.setTag(item.name);
			return view;
		}
	}

	private class SocialItem {
		public SocialItem(int logo, int name) {
			this.logo = logo;
			this.name = name;
		}

		int logo;
		int name;
	}

	@Override
	public void onClick(View v) {
		int id = v.getId();
		if (id == R.id.back) {
			finish();
			overridePendingTransition(0, 0);
		}
		if (id == R.id.cancel) {
			finish();
			overridePendingTransition(0, 0);
		}

	}

	private void social(int pos) {
		//上报行为给后端
		 if(pos == 0){
			 try{
//				 Log.d("20150813", "0 mSharedImage="+mSharedImage);
//				 ImageSize mImageSize=new ImageSize(THUMB_SIZE,THUMB_SIZE);
					ImageLoader.getInstance().loadImage(mSharedImage, new SimpleImageLoadingListener(){
						@Override
						public void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {
							// TODO Auto-generated method stub
							WXWebpageObject webpage = new WXWebpageObject();
							webpage.webpageUrl = mSharedUrl;//"http://www.baidu.com";
							WXMediaMessage msg = new WXMediaMessage();
							msg.mediaObject = webpage;
//							Bitmap bmp = BitmapFactory.decodeStream(new URL(url).openStream());
							Bitmap thumbBmp = Bitmap.createScaledBitmap(loadedImage, THUMB_SIZE, THUMB_SIZE, true);
//							loadedImage.recycle();
							msg.thumbData = BitmapUtil.bmpToByteArray(thumbBmp, true);
//							msg.thumbData = BitmapUtil.bmpToByteArray(loadedImage, true);
							// 发送文本类型的消息时，title字段不起作用
							msg.title = mSharedTitle;
							msg.description = mSharedContent;
							SendMessageToWX.Req req = new SendMessageToWX.Req();
							req.transaction = buildTransaction("img");
							req.message = msg;
							req.scene = SendMessageToWX.Req.WXSceneSession;
							boolean br=api.sendReq(req);
							finish();
							overridePendingTransition(0, 0);
						}
						@Override
						public void onLoadingFailed(String imageUri, View view, FailReason failReason) {
							WXWebpageObject webpage = new WXWebpageObject();
							webpage.webpageUrl = mSharedUrl;//"http://www.baidu.com";
							WXMediaMessage msg = new WXMediaMessage();
							msg.mediaObject = webpage;
							Bitmap thumbBmp = BitmapFactory.decodeResource(getResources(), R.mipmap.ic_launcher);//加载失败，选本地图标代替
							msg.thumbData = BitmapUtil.bmpToByteArray(thumbBmp, true);
							msg.title = mSharedTitle;
							msg.description = mSharedContent;
							SendMessageToWX.Req req = new SendMessageToWX.Req();
							req.transaction = buildTransaction("img");
							req.message = msg;
							req.scene = SendMessageToWX.Req.WXSceneSession;
							boolean br=api.sendReq(req);
							finish();
							overridePendingTransition(0, 0);
						}
					});
				} catch(Exception e) {
					e.printStackTrace();
				}
		 }
		 if(pos == 1){
			 try{
					ImageLoader.getInstance().loadImage(mSharedImage, new SimpleImageLoadingListener(){
						@Override
						public void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {
							// TODO Auto-generated method stub
							WXWebpageObject webpage = new WXWebpageObject();
							webpage.webpageUrl = mSharedUrl;//"http://www.baidu.com";
							WXMediaMessage msg = new WXMediaMessage();
							msg.mediaObject = webpage;
							Bitmap thumbBmp = Bitmap.createScaledBitmap(loadedImage, THUMB_SIZE, THUMB_SIZE, true);
							msg.thumbData = BitmapUtil.bmpToByteArray(thumbBmp, true);
							// 发送文本类型的消息时，title字段不起作用
							msg.title = mSharedTitle;
							msg.description = mSharedContent;
							SendMessageToWX.Req req = new SendMessageToWX.Req();
							req.transaction = buildTransaction("img");
							req.message = msg;
							req.scene = SendMessageToWX.Req.WXSceneTimeline;
							api.sendReq(req);
							finish();
							overridePendingTransition(0, 0);
						}
						@Override
						public void onLoadingFailed(String imageUri, View view, FailReason failReason) {
							// TODO Auto-generated method stub
							WXWebpageObject webpage = new WXWebpageObject();
							webpage.webpageUrl = mSharedUrl;//"http://www.baidu.com";
							WXMediaMessage msg = new WXMediaMessage();
							msg.mediaObject = webpage;
							Bitmap thumbBmp = BitmapFactory.decodeResource(getResources(), R.mipmap.ic_launcher);//加载失败，选本地图标代替
							msg.thumbData = BitmapUtil.bmpToByteArray(thumbBmp, true);
							// 发送文本类型的消息时，title字段不起作用
							msg.title = mSharedTitle;
							msg.description = mSharedContent;
							SendMessageToWX.Req req = new SendMessageToWX.Req();
							req.transaction = buildTransaction("img");
							req.message = msg;
							req.scene = SendMessageToWX.Req.WXSceneTimeline;
							api.sendReq(req);
							finish();
							overridePendingTransition(0, 0);
						}
					});
				} catch(Exception e) {
					e.printStackTrace();
				}
		 }
		 if(pos == 2){
			 try{
//				 Log.d("20150813", "2 mSharedImage="+mSharedImage);
				Bundle params = new Bundle();
				params.putInt(QQShare.SHARE_TO_QQ_KEY_TYPE, QQShare.SHARE_TO_QQ_TYPE_DEFAULT);
				params.putString(QQShare.SHARE_TO_QQ_TITLE, mSharedTitle);
				params.putString(QQShare.SHARE_TO_QQ_SUMMARY,  mSharedContent);
				params.putString(QQShare.SHARE_TO_QQ_TARGET_URL,  mSharedUrl);
				params.putString(QQShare.SHARE_TO_QQ_IMAGE_URL,mSharedImage);
				params.putString(QQShare.SHARE_TO_QQ_APP_NAME,  getString(R.string.app_name));
				params.putInt(QQShare.SHARE_TO_QQ_EXT_INT,  QQShare.SHARE_TO_QQ_FLAG_QZONE_ITEM_HIDE);
				mTencent.shareToQQ(this, params, new BaseUiListener());
				finish();
				overridePendingTransition(0, 0);
			 } catch(Exception e) {
					e.printStackTrace();
			 }
		 }
		 if(pos == 3){
			 try{
//				 Log.d("20150813", "3 mSharedImage="+mSharedImage);
				Bundle params = new Bundle();
				//分享类型
				ArrayList<String> image_url = new ArrayList<String>();
				image_url.add(mSharedImage);
				params.putInt(QzoneShare.SHARE_TO_QZONE_KEY_TYPE,QzoneShare.SHARE_TO_QZONE_TYPE_IMAGE_TEXT);
				params.putString(QzoneShare.SHARE_TO_QQ_TITLE, mSharedTitle);
				params.putString(QzoneShare.SHARE_TO_QQ_SUMMARY,  mSharedContent);
				params.putString(QzoneShare.SHARE_TO_QQ_TARGET_URL,  mSharedUrl);
				params.putString(QzoneShare.SHARE_TO_QQ_IMAGE_URL,mSharedImage);
			    params.putStringArrayList(QzoneShare.SHARE_TO_QQ_IMAGE_URL, image_url);
				mTencent.shareToQzone(this, params, new BaseUiListener());
				finish();
				overridePendingTransition(0, 0);
			 } catch(Exception e) {
					e.printStackTrace();
			 }
		 }
	 }
	 private class BaseUiListener implements IUiListener {
		 public void onComplete(JSONObject response) {
		 doComplete(response);
		 }
		 protected void doComplete(JSONObject values) {

		 }
		 @Override
		 public void onError(UiError e) {
//			 Log.d("20150812","SocialActivity_BaseUiListener_onError "+"onError:"+"code:" + e.errorCode + ", msg:" + e.errorMessage + ", detail:" + e.errorDetail);
		 }
		 @Override
		 public void onCancel() {

		 }
		@Override
		public void onComplete(Object arg0) {

		}
	 } 
	 private String buildTransaction(final String type) {
			return (type == null) ? String.valueOf(System.currentTimeMillis()) : type + System.currentTimeMillis();
		}
}
