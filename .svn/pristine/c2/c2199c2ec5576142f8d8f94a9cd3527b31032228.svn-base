package com.talenton.lsg.ui.user;

import android.app.ProgressDialog;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.view.View;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.talenton.lsg.BaseCompatActivity;
import com.talenton.lsg.LsgApplication;
import com.talenton.lsg.R;
import com.talenton.lsg.base.okhttp.OkHttpUtils;
import com.talenton.lsg.base.server.UserServer;
import com.talenton.lsg.base.util.AppLogger;
import com.talenton.lsg.base.util.FileUtil;
import com.talenton.lsg.base.util.ImageLoaderManager;
import com.talenton.lsg.widget.SwitchView;

public class SettingActivity extends BaseCompatActivity implements View.OnClickListener {
    private LinearLayout ll_user_info;
    private LinearLayout ll_clear_data;
    private TextView tv_cache_size;
    private LinearLayout ll_about;
    private LinearLayout ll_help_center;
    private LinearLayout ll_exit;
    private SwitchView wifi_switch;
    private ClearTask clearTask;

    public static void startSettingActivity(Context context){
        context.startActivity(new Intent(context,SettingActivity.class));
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_setting);
        
        initView();
        fillData();
    }

    private void fillData() {
        tv_cache_size.setText(getCacheSize());
    }

    /**
     * 获取缓存大小
     * @return
     */
    private String getCacheSize(){
       return FileUtil.getFileSizeString(ImageLoaderManager.getInstance().getDiskCacheSize());
    }

    private void initView() {
        ll_user_info = (LinearLayout) findViewById(R.id.ll_user_info);
        ll_clear_data = (LinearLayout) findViewById(R.id.ll_clear_data);
        tv_cache_size = (TextView) findViewById(R.id.tv_cache_size);
        ll_about = (LinearLayout) findViewById(R.id.ll_about);
        ll_help_center = (LinearLayout) findViewById(R.id.ll_help_center);
        ll_exit = (LinearLayout) findViewById(R.id.ll_exit);
        wifi_switch = (SwitchView) findViewById(R.id.wifi_switch);
        wifi_switch.setOnSwitchListener(new SwitchView.OnSwitchListener() {
            @Override
            public void open() {
                AppLogger.d("open");
            }

            @Override
            public void close() {
                AppLogger.d("close");
            }
        });

        ll_user_info.setOnClickListener(this);
        ll_clear_data.setOnClickListener(this);
        ll_about.setOnClickListener(this);
        ll_help_center.setOnClickListener(this);
        ll_exit.setOnClickListener(this);

        if (UserServer.getCurrentUser().getUid() == 0){
            ll_exit.setVisibility(View.GONE);
        }
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.ll_user_info:
                //用户信息
                UserInfoActivity.startUserInfoActivity(this);
                break;
            case R.id.ll_clear_data:
                //清除缓存 ==> 图片缓存
                if (ImageLoaderManager.getInstance().getDiskCacheSize() == 0){
                    showShortToast("未有缓存数据");
                    return;
                }else {
                    if (clearTask == null){
                        clearTask = new ClearTask(this);
                    }
                    clearTask.execute();
                }
                break;
            case R.id.ll_about:
                //关于
                AboutActivity.startAboutActivity(this);
                break;
            case R.id.ll_help_center:
                HelperListActivity.startHelperListActivity(this);
                break;
            case R.id.ll_exit:
                // 退出
                doExit();
                break;
        }
    }

    public void doExit(){
        UserServer.clearRspInfo(); //清楚用户信息
        OkHttpUtils.getInstance().getCookieStore().removeAll(); //清除用户cookie信息
        startActivity(new Intent(this, LoginMainActivity.class));
        ((LsgApplication)getApplication()).clearActivity();
    }

    @Override
    protected int getTitleResourceId() {
        return R.string.mine_setting_title;
    }

    class ClearTask extends AsyncTask<Object,Integer,Boolean>{
        private ProgressDialog progressDialog;
        public ClearTask(Context context){
            progressDialog = new ProgressDialog(context);
            progressDialog.setMessage("清楚缓存中...");
        }

        @Override
        protected void onPostExecute(Boolean aBoolean) {
            if (aBoolean == true){
                showShortToast("清除完成");
                tv_cache_size.setText(getCacheSize());
            }
            progressDialog.dismiss();
        }

        @Override
        protected Boolean doInBackground(Object... params) {
            try{
                ImageLoaderManager.getInstance().removeDiskAndMemoryCache();
            }catch (Exception e){
                e.printStackTrace();
                return false;
            }
            return true;
        }

        @Override
        protected void onPreExecute() {
            progressDialog.show();
        }


    }
}
