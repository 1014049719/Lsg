package com.talenton.lsg.server;

import android.util.Log;

import com.talenton.lsg.base.okhttp.OkHttpClientManager;
import com.talenton.lsg.base.server.XLTError;
import com.talenton.lsg.base.server.XLTResponseCallback;
import com.talenton.lsg.base.server.XLTResponseListener;
import com.talenton.lsg.base.util.JsonObjUtil;
import com.talenton.lsg.server.bean.discovery.ActionParam;
import com.talenton.lsg.server.bean.discovery.LocatoinParam;
import com.talenton.lsg.server.bean.discovery.MessageParam;
import com.talenton.lsg.server.bean.discovery.NumData;
import com.talenton.lsg.server.bean.discovery.RspAction;
import com.talenton.lsg.server.bean.discovery.RspDiscoverNumType;
import com.talenton.lsg.server.bean.discovery.RspShopListType;
import com.talenton.lsg.server.bean.discovery.RspTestSchool;
import com.talenton.lsg.server.bean.discovery.TestSchoolParam;

/**
 * Created by Administrator on 2016/4/19.
 */
public class DiscoveryServer {

    //发现首页未读数字红点
    public static void getNumData(NumData time, final XLTResponseCallback<RspDiscoverNumType> listener){

        String ReqURL="discover.php?mod=noread_num&cmdcode=12";
        OkHttpClientManager.getInstance().addGsonRequest(ReqURL, RspDiscoverNumType.class, new XLTResponseListener<RspDiscoverNumType>() {
            @Override
            public void onResponse(RspDiscoverNumType responseData, XLTError errorData) {
                listener.onResponse(responseData,errorData);
            }
        }, OkHttpClientManager.getInstance().getmGson().toJson(time));

    }

    //获取门店列表
    public static void getShopListData(LocatoinParam locatoinParam,final XLTResponseCallback<RspShopListType> listener){

        OkHttpClientManager.getInstance().addGsonRequest(locatoinParam.URL, RspShopListType.class, new XLTResponseListener<RspShopListType>() {
            @Override
            public void onResponse(RspShopListType responseData, XLTError errorData) {

                listener.onResponse(responseData,errorData);
            }
        },OkHttpClientManager.getInstance().getmGson().toJson(locatoinParam));

    }

    //获取实验校列表
    public static void getTestSchoolData(TestSchoolParam testSchoolParam,final XLTResponseCallback<RspTestSchool> listener){

        OkHttpClientManager.getInstance().addGsonRequest(testSchoolParam.URL, RspTestSchool.class, new XLTResponseListener<RspTestSchool>() {
            @Override
            public void onResponse(RspTestSchool responseData, XLTError errorData) {

                listener.onResponse(responseData,errorData);
            }
        },OkHttpClientManager.getInstance().getmGson().toJson(testSchoolParam));

    }

    //获取活动列表
    public static void getActionListData(ActionParam actionParam,final XLTResponseCallback<RspAction>listener){

        OkHttpClientManager.getInstance().addGsonRequest(actionParam.URL, RspAction.class, new XLTResponseListener<RspAction>() {
            @Override
            public void onResponse(RspAction responseData, XLTError errorData) {

                listener.onResponse(responseData,errorData);
            }
        },OkHttpClientManager.getInstance().getmGson().toJson(actionParam));

    }

    //获取资讯列表
    public static void getMessageListData(MessageParam messageParam,final XLTResponseCallback<RspAction>listener){

        OkHttpClientManager.getInstance().addGsonRequest(messageParam.URL, RspAction.class, new XLTResponseListener<RspAction>() {
            @Override
            public void onResponse(RspAction responseData, XLTError errorData) {

                listener.onResponse(responseData,errorData);
            }
        },OkHttpClientManager.getInstance().getmGson().toJson(messageParam));
    }

}
