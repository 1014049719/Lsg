package com.talenton.lsg.ui.feed;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;

import com.nostra13.universalimageloader.core.ImageLoader;
import com.talenton.lsg.BaseCompatActivity;
import com.talenton.lsg.R;
import com.talenton.lsg.base.server.XLTError;
import com.talenton.lsg.base.server.XLTResponseCallback;
import com.talenton.lsg.base.util.ImageLoaderManager;
import com.talenton.lsg.base.widget.LoadingViewHolder;
import com.talenton.lsg.server.FeedServer;
import com.talenton.lsg.server.bean.feed.CircleRankData;
import com.talenton.lsg.server.bean.feed.RspCircleRank;

import java.util.LinkedList;

public class CircleRankActivity extends BaseCompatActivity implements View.OnClickListener{

    public PagerAdapter mAdapter;
    public RecyclerView mRankView;
    private LoadingViewHolder mLoading;
    private Long mCircleId;

    public static void startCircleRankActivity(Context context, long circleId){
        Intent intent = new Intent(context, CircleRankActivity.class);
        intent.putExtra("circleId", circleId);
        context.startActivity(intent);
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_circle_rank);

        mCircleId = this.getIntent().getLongExtra("circleId", 0);
        mRankView = (RecyclerView)findViewById(R.id.rlv_rank);

        mRankView.setHasFixedSize(true);
        LinearLayoutManager manager = new LinearLayoutManager(this);
        manager.setOrientation(LinearLayoutManager.VERTICAL);
        mRankView.setLayoutManager(manager);
        mAdapter = new PagerAdapter(this);
        mRankView.setAdapter(mAdapter);

        View loading = findViewById(R.id.loading_container);
        mLoading = new LoadingViewHolder(mRankView, loading, this, this);

        RspCircleRank data = new RspCircleRank();
        data.list = new LinkedList<>();
        CircleRankData r = new CircleRankData();
        r.topics_count = 1;
        r.comments_count = 2;
        r.realname = "3";
        data.list.add(r);
        data.ext_current_member_order = new CircleRankData();
        data.ext_current_member_order.topics_count = 1;
        data.ext_current_member_order.comments_count = 2;
        data.ext_current_member_order.realname = "3";
        initData(data);

        mLoading.showView(LoadingViewHolder.VIEW_TYPE_DATA);
        //loadData();
    }

    private void loadData(){
        mLoading.showView(LoadingViewHolder.VIEW_TYPE_LOADING);
        FeedServer.getCircleRankList(mCircleId, new XLTResponseCallback<RspCircleRank>() {
            @Override
            public void onResponse(RspCircleRank data, XLTError error) {
                if (error == null && data != null && data.list != null) {
                    initData(data);
                    mLoading.showView(LoadingViewHolder.VIEW_TYPE_DATA);
                } else if (error != null) {
                    mLoading.showView(LoadingViewHolder.VIEW_TYPE_NO_NOTWORK);
                } else {
                    mLoading.showView(LoadingViewHolder.VIEW_TYPE_NO_DATA);
                }
            }
        });
    }

    private void initData(RspCircleRank data){
        if (data.ext_current_member_order == null && data.list.size() == 0){
            mLoading.showView(LoadingViewHolder.VIEW_TYPE_NO_DATA);
            return;
        }
        mAdapter.setRankDatas(data.list, data.ext_current_member_order);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.btn_reload:
            case R.id.empty_action:
                loadData();
                break;
        }
    }

    @Override
    protected int getTitleResourceId() {
        return R.string.user_select_school;
    }

    private class PagerAdapter extends RecyclerView.Adapter<PagerVewHodler>{
        private LayoutInflater mInflater;
        LinkedList<CircleRankData> mRankDatas;

        public PagerAdapter(Context context){
            super();
            mInflater = LayoutInflater.from(context);
            mRankDatas = new LinkedList<>();
        }

        public void setRankDatas(LinkedList<CircleRankData> datas, CircleRankData data){
            if (datas == null) return;
            mRankDatas.clear();
            mRankDatas.addAll(datas);
            if (data != null){
                mRankDatas.addFirst(data);
            }
            notifyDataSetChanged();
        }

        @Override
        public PagerVewHodler onCreateViewHolder(ViewGroup parent, int viewType) {
            View view = mInflater.inflate(R.layout.item_circle_rank, parent, false);
            final PagerVewHodler holder = new PagerVewHodler(view);
            return holder;
        }

        @Override
        public void onBindViewHolder(PagerVewHodler holder, int position) {
            CircleRankData data = mRankDatas.get(position);
            ImageLoader.getInstance().displayImage(data.getCircleMember().avatar, holder.mUserLogo
                    , ImageLoaderManager.DEFAULT_USER_IMAGE_DISPLAYER);
            holder.mTitle.setText(data.realname);
            holder.mTopic.setText(String.format("话题: %d", data.topics_count));
            holder.mReply.setText(String.format("回复: %d", data.comments_count));
            if(position == 0){
                holder.mRankTop.setImageResource(R.mipmap.rank1_top);
                holder.mRank.setImageResource(R.mipmap.rank1);
                holder.mRankNum.setText(String.valueOf(position+1));
            }else if(position == 1){
                holder.mRankTop.setImageResource(R.mipmap.rank2_top);
                holder.mRank.setImageResource(R.mipmap.rank2);
                holder.mRankNum.setText(String.valueOf(position+1));
            }else if(position == 2){
                holder.mRankTop.setImageResource(R.mipmap.rank3_top);
                holder.mRank.setImageResource(R.mipmap.rank3);
                holder.mRankNum.setText(String.valueOf(position+1));
            }else {
                holder.mRankTop.setVisibility(View.GONE);
                holder.mRank.setVisibility(View.GONE);
                holder.mRankNum.setVisibility(View.GONE);
            }
        }

        @Override
        public int getItemCount() {
            return mRankDatas.size();
        }
    }

    private class PagerVewHodler extends RecyclerView.ViewHolder{

        public ImageView mRank, mRankTop, mUserLogo;
        public TextView mRankNum, mTitle, mTopic, mReply;

        public PagerVewHodler(View itemView) {
            super(itemView);
            mRank = (ImageView) itemView.findViewById(R.id.iv_rank);
            mRankTop = (ImageView) itemView.findViewById(R.id.iv_rank_top);
            mUserLogo = (ImageView) itemView.findViewById(R.id.user_logo);
            mRankNum = (TextView) itemView.findViewById(R.id.tv_rank_num);
            mTitle = (TextView) itemView.findViewById(R.id.tv_title);
            mTopic = (TextView) itemView.findViewById(R.id.tv_topics_num);
            mReply = (TextView) itemView.findViewById(R.id.tv_reply_num);
        }
    }
}
