package com.talenton.lsg.ui;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.View;
import android.webkit.CookieManager;
import android.webkit.CookieSyncManager;
import android.webkit.WebChromeClient;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.ProgressBar;

import com.handmark.pulltorefresh.library.PullToRefreshBase;
import com.handmark.pulltorefresh.library.PullToRefreshWebView;
import com.talenton.lsg.BaseCompatActivity;
import com.talenton.lsg.R;
import com.talenton.lsg.base.AppConfig;
import com.talenton.lsg.base.util.AppLogger;
import com.talenton.lsg.server.XLTHttpClientStack;

public class WebViewActivity extends BaseCompatActivity {
    private PullToRefreshWebView pullToRefreshWebView;
    private WebView webView;
    private ProgressBar wb_loading;
    private static final String LOAD_URL = "load_url";
    private static final String IS_NEED_PREFIX = "is_need_prefix";

    private String url;
    private boolean isNeedPrefix;


    public static void startWebViewActivity(Context context, String url, boolean isNeedPrefix) {
        Intent intent = new Intent(context, WebViewActivity.class);
        intent.putExtra(LOAD_URL, url);
        intent.putExtra(IS_NEED_PREFIX, isNeedPrefix);
        context.startActivity(intent);
    }

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_web_view2);

        pullToRefreshWebView = (PullToRefreshWebView) findViewById(R.id.webview);
        pullToRefreshWebView.setMode(PullToRefreshBase.Mode.PULL_FROM_START);
        pullToRefreshWebView.setOnRefreshListener(new PullToRefreshBase.OnRefreshListener<WebView>() {
            @Override
            public void onRefresh(PullToRefreshBase<WebView> refreshView) {
                pullToRefreshWebView.onRefreshComplete();
                webView.reload();
            }
        });
        webView = pullToRefreshWebView.getRefreshableView();
        wb_loading = (ProgressBar) findViewById(R.id.wb_loading);
        wb_loading.setMax(100);

        initVebView();
        loadUrl();
    }

    private void loadUrl() {
        isNeedPrefix = getIntent().getBooleanExtra(IS_NEED_PREFIX, false);
        url = getIntent().getStringExtra(LOAD_URL);
        if (isNeedPrefix) {
            url = AppConfig.HOME_URL + url;
        }
        AppLogger.d("webview url ==>" + url);
        webView.loadUrl(url);
    }

    private void initVebView() {
        webView.setWebChromeClient(new WebChromeClient() {
            @Override
            public void onProgressChanged(WebView view, int newProgress) {
                wb_loading.setVisibility(View.VISIBLE);
                wb_loading.setProgress(newProgress);
                if (newProgress == 100){
                    wb_loading.setVisibility(View.GONE);
                }
            }

            @Override
            public void onReceivedTitle(WebView view, String title) {
                super.onReceivedTitle(view, title);
            }
        });

        webView.setWebViewClient(new WebViewClient() {
            public boolean shouldOverrideUrlLoading(WebView view, String url) { //  重写此方法表明点击网页里面的链接还是在当前的webview里跳转，不跳到浏览器那边
                view.loadUrl(url);
                return true;
            }

            @Override
            public void onPageFinished(WebView view, String url) {
                setTitle(view.getTitle());
                super.onPageFinished(view, url);
            }
        });

        //设置编码
        webView.getSettings().setDefaultTextEncodingName("utf-8");
        //支持js
        webView.getSettings().setJavaScriptEnabled(true);
        // 设置可以支持缩放
        webView.getSettings().setSupportZoom(true);
        // 设置出现缩放工具
        webView.getSettings().setBuiltInZoomControls(true);
        //扩大比例的缩放
        webView.getSettings().setUseWideViewPort(true);
        //自适应屏幕
        webView.getSettings().setLayoutAlgorithm(WebSettings.LayoutAlgorithm.SINGLE_COLUMN);
        webView.getSettings().setLoadWithOverviewMode(true);

        synCookies(WebViewActivity.this, url);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (keyCode == KeyEvent.KEYCODE_BACK && webView.canGoBack()) {
            webView.goBack();// 返回前一个页面
            return true;
        }
        return super.onKeyDown(keyCode, event);
    }


    /**
     * 同步一下cookie
     */
    public static void synCookies(Context context, String url) {
        CookieSyncManager.createInstance(context);
        CookieManager cookieManager = CookieManager.getInstance();
        cookieManager.setAcceptCookie(true);
        // cookieManager.removeSessionCookie();//移除
        XLTHttpClientStack.syncCookie(cookieManager, url);
        CookieSyncManager.getInstance().sync();
    }
}
