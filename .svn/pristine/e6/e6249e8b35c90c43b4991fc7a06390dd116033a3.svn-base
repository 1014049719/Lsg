package com.talenton.lsg.ui.shop;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import com.talenton.lsg.BaseListActivity;
import com.talenton.lsg.R;
import com.talenton.lsg.base.server.XLTError;
import com.talenton.lsg.base.util.NetWorkUtils;
import com.talenton.lsg.server.SchoolServer;
import com.talenton.lsg.server.ShopServer;
import com.talenton.lsg.server.bean.shop.GoodsInfo;
import com.talenton.lsg.server.bean.shop.RecvSearchGoodsData;
import com.talenton.lsg.ui.shop.adapter.GoodsAdapter;
import com.talenton.lsg.widget.SearchView;

import java.util.ArrayList;

/**
 * Created by xiaoxiang on 2016/4/7.
 */
public class SearchGoodsActivity extends BaseListActivity implements View.OnClickListener, AdapterView.OnItemClickListener {


    private ArrayList<GoodsInfo> mGoodsDiscountInfoList;
    private SearchView search_view;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_shop_search);

        initView();


    }
    /**
     * 初始化view
     * @param
     */
    private void initView() {

        mGoodsDiscountInfoList=new ArrayList<GoodsInfo>();
        mAdapter = new GoodsAdapter(this,mGoodsDiscountInfoList,0);
        mPullRefreshListView.getRefreshableView().setAdapter(mAdapter);
        mPullRefreshListView.setOnItemClickListener(this);
        search_view = (SearchView) findViewById(R.id.shop_search_view);
        search_view.setOnSearchCallback(new SearchView.OnSearchCallback() {
            @Override
            public void searchCallback(String searchText) {
                if (!NetWorkUtils.isNetworkAvailable(SearchGoodsActivity.this)){
                    showShortToast(getString(R.string.main_disable_network));
                    return;
                }
                if (!searchText.isEmpty()) {


                    startGetData(new ShopServer.ShopSearchListServer(searchText), new ListResponseCallback<RecvSearchGoodsData>() {
                        @Override
                        public void onSuccess(RecvSearchGoodsData data) {
                            if (data.getList().isEmpty()){
                                showShortToast("没有符合条件的结果");
                            }else {
                                mGoodsDiscountInfoList.clear();
                                mGoodsDiscountInfoList.addAll(data.getList());
                                mAdapter.notifyDataSetChanged();
                            }
                        }

                        @Override
                        public void onError(XLTError error) {

                        }
                    });
                }else {
                    showShortToast("搜索内容不能为空");
                }
            }
        });


    }
    @Override
    protected int getTitleResourceId() {
        return R.string.shop_text_search;
    }

    @Override
    protected int getPullRefreshListViewResId() {
        return R.id.shop_search_result_list;
    }




    @Override
    public void onClick(View v) {
    }

    @Override
    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
        //   position = position - mPullRefreshListView.getRefreshableView().getHeaderViewsCount();
        GoodsInfo mGoodsInfo = (GoodsInfo) mAdapter.getItem(position);


    }
}
